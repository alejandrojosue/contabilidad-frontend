---
import Layout from "@layouts/Layout.astro";

const res = await fetch("http://localhost:8080/api/api-calls", {
  method: "GET",
  headers: {
    "Content-Type": "application/json",
    Accept: "application/json",
  },
});
if (!res.ok) {
  throw new Error("Network response was not ok");
}
const data = await res.json();
// const { api_call_reference, trama_1, trama_2, trama_3, trama_4 } = data.values[0];
---

<Layout>
  <div class="relative overflow-x-auto">
    <p>Total: {data.count}</p>
    <table
      class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"
    >
      <thead
        class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
      >
        <tr>
          <th scope="col" class="px-6 py-3"> Reference </th>
          <th scope="col" class="px-6 py-3"> trama 1 </th>
          <th scope="col" class="px-6 py-3"> trama 2 </th>
          <th scope="col" class="px-6 py-3"> trama 3 </th>
          <th scope="col" class="px-6 py-3"> trama 4 </th>
        </tr>
      </thead>
      <tbody>
        {
          data?.values &&
            (data.values as []).map(
              ({ api_call_reference, trama_1, trama_2, trama_3, trama_4 }) => (
                <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 border-gray-200">
                  <th
                    scope="row"
                    class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white"
                  >
                    {api_call_reference}
                  </th>
                  <td class="px-6 py-4">{trama_1}</td>
                  <td class="px-6 py-4">{trama_2}</td>
                  <td class="px-6 py-4">{trama_3}</td>
                  <td class="px-6 py-4">{trama_4}</td>
                </tr>
              ),
            )
        }
      </tbody>
    </table>
  </div>
</Layout>
